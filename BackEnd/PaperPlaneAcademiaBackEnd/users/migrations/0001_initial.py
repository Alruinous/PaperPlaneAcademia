# Generated by Django 3.2 on 2024-12-23 09:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authors', '0001_initial'),
        ('papers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('user_type', models.CharField(choices=[('researcher', '科研人员'), ('reviewer', '审核人员'), ('normalUser', '普通用户')], max_length=50)),
                ('bio', models.TextField(blank=True, null=True)),
                ('research_fields', models.JSONField(blank=True, null=True)),
                ('avatar', models.IntegerField(default=0)),
                ('published_papers_count', models.PositiveIntegerField(default=0)),
                ('inbox', models.JSONField(blank=True, null=True)),
                ('register_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='active', max_length=50)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('author_claimed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='claimed_by', to='authors.author')),
                ('favorite_papers', models.ManyToManyField(blank=True, related_name='favorited_by', to='papers.Paper')),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to='users.User')),
                ('recent_viewed_papers', models.ManyToManyField(blank=True, related_name='recently_viewed_by', to='papers.Paper')),
                ('uploaded_papers', models.ManyToManyField(blank=True, related_name='uploaded_by', to='papers.Paper')),
            ],
        ),
    ]
